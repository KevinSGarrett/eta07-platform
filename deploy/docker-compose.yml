
version: "3.9"
services:
  db:
    image: postgres:15
    container_name: eta07-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks: [stack]

  directus:
    image: directus/directus:10
    container_name: eta07-directus
    restart: always
    depends_on: [db]
    environment:
      KEY: ${JWT_SECRET}
      SECRET: ${JWT_SECRET}
      PUBLIC_URL: https://data.${DOMAIN}
      DB_CLIENT: pg
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      STORAGE_LOCATIONS: s3
      STORAGE_S3_DRIVER: s3
      STORAGE_S3_BUCKET: ${S3_BUCKET_ASSETS}
      STORAGE_S3_REGION: ${S3_REGION}
      STORAGE_S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE}
      EMAIL_TRANSPORT: smtp
      EMAIL_SMTP_HOST: ${SMTP_HOST}
      EMAIL_SMTP_PORT: ${SMTP_PORT}
      EMAIL_SMTP_USER: ${SMTP_USER}
      EMAIL_SMTP_PASSWORD: ${SMTP_PASS}
      EMAIL_FROM: ${SMTP_FROM}
      TZ: ${TZ}
    networks: [stack]

  nginx:
    image: nginx:1.25-alpine
    container_name: eta07-nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - certs:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on: [directus]
    networks: [stack]

  certbot:
    image: certbot/certbot
    container_name: eta07-certbot
    entrypoint: /bin/sh -c
    command: >
      "trap exit TERM;
       while :; do
         certbot certonly --standalone -n --agree-tos -m ${SMTP_FROM}
         -d data.${DOMAIN} --keep-until-expiring --http-01-port 80;
         sleep 12h;
       done"
    ports:
      - "80:80"
    volumes:
      - certs:/etc/letsencrypt
    networks: [stack]

networks:
  stack:

volumes:
  db_data:
  certs:
